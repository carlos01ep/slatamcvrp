/* === Nube de sugerencias (SOLO en sidebar dentro de un expander) === */

/* 1. Contenedor principal de los chips.
   Cambiado a stVerticalBlock (común para st.container()), y usamos ~ para hermanos generales.
   Esto asegura que capture el contenedor correcto después del marcador .chips-scope.
*/
section[data-testid="stSidebar"] div[data-testid="stExpander"] .chips-scope ~ div[data-testid="stVerticalBlock"] {
    display: flex !important;
    flex-wrap: wrap !important;
    gap: 4px !important;  /* Reducido para más compresión */
    align-items: center !important;
    justify-content: flex-start !important;  /* Alinea a la izquierda para wrap natural */
}

/* 2. Contenedor de cada botón (div.stButton o row-widget.stButton).
   Hacemos que sea lo más compacto posible: sin márgenes extras, ancho auto.
*/
section[data-testid="stSidebar"] div[data-testid="stExpander"] .chips-scope ~ div[data-testid="stVerticalBlock"] div.stButton {
    display: inline-flex !important;  /* Mejor que inline-block para alineación interna */
    width: auto !important;
    min-width: 0 !important;
    margin: 0 !important;
    padding: 0 !important;
}

/* 3. Estilo del botón-chip.
   Targeteamos específicamente botones con kind="secondary" y data-testid="stBaseButton-secondary" para precisión.
   Reducimos al máximo: fuente 11px, padding mínimo (2px 8px), sin bordes extras, height implícito mínimo.
*/
section[data-testid="stSidebar"] div[data-testid="stExpander"] .chips-scope ~ div[data-testid="stVerticalBlock"] div.stButton > button[kind="secondary"][data-testid="stBaseButton-secondary"] {
    background-color: #007fc8 !important;
    color: white !important;
    border-radius: 16px !important;
    border: none !important;
    font-size: 11px !important;  /* Más pequeña para compresión */
    font-weight: 600 !important;
    padding: 2px 8px !important;  /* Padding reducido al mínimo viable */
    margin: 0 !important;
    width: auto !important;
    min-width: 0 !important;
    height: auto !important;  /* Evita altura fija */
    line-height: 1.1 !important;  /* Reduce espacio vertical */
    display: inline-flex !important;
    align-items: center !important;
    justify-content: center !important;
    transition: background-color 0.2s ease !important;
    box-shadow: none !important;  /* Elimina sombras para feel más plano y pequeño */
}

/* 4. Efecto hover */
section[data-testid="stSidebar"] div[data-testid="stExpander"] .chips-scope ~ div[data-testid="stVerticalBlock"] div.stButton > button[kind="secondary"][data-testid="stBaseButton-secondary"]:hover {
    background-color: #009fe3 !important;

}




/* 2. Estilo de Switch (Rojo/No, Verde/Sí) para la columna Checkbox de data_editor */
/* Adaptado para apuntar a los elementos de checkbox dentro del st.data_editor */
.stDataFrame div[data-testid*="stDataEditor"] label[data-testid="stCheckbox"] {
    position: relative;
    display: inline-block;
    width: 44px; /* Ancho del switch */
    height: 24px; /* Altura del switch */
}

/* Ocultar el input nativo */
.stDataFrame div[data-testid*="stDataEditor"] input[type="checkbox"] {
    opacity: 0;
    width: 0;
    height: 0;
}

/* Pista/Fondo del switch (por defecto: ROJO para NO/FALSO) */
.stDataFrame div[data-testid*="stDataEditor"] input[type="checkbox"] + div {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #ef4444; /* Tailwind red-500 for 'No' */
    transition: .4s;
    border-radius: 34px; /* Bordes redondeados */
}

/* Perilla/Botón del switch */
.stDataFrame div[data-testid*="stDataEditor"] input[type="checkbox"] + div:before {
    position: absolute;
    content: "";
    height: 16px;
    width: 16px;
    left: 4px;
    bottom: 4px;
    background-color: white;
    transition: .4s;
    border-radius: 50%;
}

/* Estado Marcado (Verde para SÍ/VERDADERO) */
.stDataFrame div[data-testid*="stDataEditor"] input:checked + div {
    background-color: #22c55e; /* Tailwind green-500 for 'Yes' */
}

/* Mover perilla a la derecha cuando está marcado */
.stDataFrame div[data-testid*="stDataEditor"] input:checked + div:before {
    transform: translateX(20px);
